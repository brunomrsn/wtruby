2009-01-25 Richard Dale <richard.j.dale@gmail.com>
* When an item is marked for not needing garbage collection show the actual
Ruby class in the debug logging
* Fixed some bugs in the widgetgallery dialogwidgets examples
* Added inspect() and pp() methods for Wt::WSubMenuItem and added a 'text'
item to the Wt::WMenuItem inspect method
* More tweaks to the widgetsgallery demo. Disable Ruby garbage collection for
now until problems in coordinating GC with Wt are fixed
* Some improvements to the smokeruby_mark() function and garbage collection
logging

2009-01-24 Richard Dale <richard.j.dale@gmail.com>
* Fixed bugs in the widgetgallery 'Form Validators' option
* The Pie Chart example wasn't calling super in its WContainer constructor and
was causing a seg fault
* Various fixes for the widgetgallery Ext Dialog example, and added a 
'status=()' method to the event displayer
* Added a text value to the WLineEdit inspect() and pp() methods

2009-01-23 Richard Dale <richard.j.dale@gmail.com>
* Added the widgetgallery example, and amended the charts, dragdrop and 
painting examples to work with it.

2009-01-22 Richard Dale <richard.j.dale@gmail.com>
* There was an exception in the virtual method callback code to ignore any
load() methods as they clashed with the Ruby Kernel#load method. However,
Kernel#load is a module method, and a respond_to? test on a Wt::Ruby instance 
won't ever be true. So remove the load() special casing. This makes the code
for DeferredWidgets in the wt-homepage and widgetgallery examples work 
correctly.
* Special cased the Wt::WButtonGroup.addButton() method so that it works with
Ext::RadioButtons
* Added support for JSignal<bool>, JSignal<int> and JSignal<int,int> types.
The Ext::ComboBox activated signal of type JSignal<int> now works correctly
* Added marshallers for various std::set types

2009-01-20 Richard Dale <richard.j.dale@gmail.com>
* Skip methods called 'impl' in the Smoke library generation
* Add a marshaller for std::vector<Wt::WString>

2009-01-19 Richard Dale <richard.j.dale@gmail.com>
* When a WServer method raises a C++ exception, convert it to a Ruby runtime
error calling rb_raise()

2009-01-18 Richard Dale <richard.j.dale@gmail.com>
* Added a Wt::wt_version to return the version string of the Wt lib being used
* Raise the version string of Wt::Ruby to 0.9.0
* The Wt::WServer.setEntryPoint() method that can be passed a Ruby block
like this:

    server.addEntryPoint(Wt::WServer::Application) do |env|
      HelloApplication.new(env, false)
    end

Some more work needs to be done to translate C++ exceptions to Ruby ones for
the WServer methods
* Added the hello-widgetset example
* Added WTHTTP_CONFIGURATION, RUNDIR and WT_CONFIG_XML top level constants
corresponding to the ones in the WConfig.h header
* Don't repeat the code to convert from ARGV to argc/argv and add a utility
function args2argv()
* Added patch from Koen Deforche to fix a looping on startup problem. Thanks
for the patch, but I'm not sure why only certain users are affected.
* Added the treeview example

2009-01-16 Richard Dale <richard.j.dale@gmail.com>
* Removed the simplechat example as it only works with the multi-threaded 
version of libwthttp, which can't be used with Wt::Ruby

2009-01-15 Richard Dale <richard.j.dale@gmail.com>
* Allow Ruby Date and Time instances to be passed to the Wt::WDate and 
Boost::Any constructors
* Remove the optimization in the mark function to only traverse the tree of 
children of WObjects which don't have parents and always traverse instead.

2009-01-11 Richard Dale <richard.j.dale@gmail.com>
* Added a wt.rb file that is installed and will pull in either 'wthttp' or the
'wtfcgi' extensions according to the value of the 'WT_ENV' environment variable
* Add '#!/usr/bin/ruby' to the example program sources

2008-12-28 Richard Dale <richard.j.dale@gmail.com>
* Instead of a single 'wt' ruby extension linked against libwthttp, build two
ruby extensions 'wthttp' and 'wtfcgi' linked against the http and fcgi 
connectors respectively. 
* Wt::Ruby programs, such as the examples, could still have require 'wt' 
statements, and they could be set up to actually pull in either the 'wthttp'
or 'wtfcgi' extension according to whether they are to be used in a 
development or production environment. For instance, in wt.rb:

    if ENV['WT_ENV'] == 'production'
      require 'wtfcgi'
    elsif ENV['WT_ENV'] == 'development'
      require 'wthttp'
    end

* Removed redundant copies of the Ext javascript code in the examples

2008-12-26 Richard Dale <richard.j.dale@gmail.com>
* Stateless slots cannot have any arguments, however they can be connected to
signals which have arguments. So when an EventSignal is connected to a slot
with arity zero then check for whether the slot is stateless.
* Fixed some bugs in the treelist example.

2008-12-24 Richard Dale <richard.j.dale@gmail.com>
* Added an ancestors() method for the Wt:: classes
* Rename classnameMap as IdToClassNameMap to be consistent with QtRuby

2008-12-23 Richard Dale <richard.j.dale@gmail.com>
* Added an implementation of stateless slots. Example usage:

    implementStateless(:showIcon1, :undoShowIcon1)

2008-12-19 Richard Dale <richard.j.dale@gmail.com>
* When the construct_copy() function was used to copy an instance, it wasn't
initializing the binding for the new instance. This caused a crash when the
destructor for the instance tried to make a callback with the null binding. 
* Added a std::vector<Wt::WStandardItem*> marshaller
* If a set method setXXX() already existed for an instance variable XXX, then
the type of the variable wasn't being registered, and smoke code generation 
failed

2008-12-18 Richard Dale <richard.j.dale@gmail.com>
* Added Ruby 1.9 compatible RSTRING handling
* Update the wt_header_list with the Wt 2.2.2 headers and tweak the smoke lib
code generation for the smoke lib to work
* However, the Wt::WPopupMenu header is missing a Wt/WApplication include

2008-12-14 Richard Dale <richard.j.dale@gmail.com>
* Added Wt::WModelIndex.internalPointer() and 
Wt::WAbstractItemModel.createIndex() methods

2008-12-12 Richard Dale <richard.j.dale@gmail.com>
* Updated the smoke.h header with improved binary chop code
